/*
 * GanttChartApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter(router *gin.Engine) *gin.Engine {

	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"DeleteUsersId",
		http.MethodDelete,
		"/api/users/:id",
		DeleteUsersId,
	},

	{
		"GetUsers",
		http.MethodGet,
		"/api/users",
		GetUsers,
	},

	{
		"GetUsersId",
		http.MethodGet,
		"/api/users/:id",
		GetUsersId,
	},

	{
		"PostLogin",
		http.MethodPost,
		"/api/login",
		PostLogin,
	},

	{
		"PostLogout",
		http.MethodPost,
		"/api/logout",
		PostLogout,
	},

	{
		"PostUsers",
		http.MethodPost,
		"/api/users",
		PostUsers,
	},

	{
		"PostUsersId",
		http.MethodPost,
		"/api/users/:id",
		PostUsersId,
	},
}
